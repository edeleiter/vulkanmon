# VulkanMon CI/CD Pipeline
# Builds and tests the VulkanMon game engine with comprehensive C++ unit testing
name: VulkanMon CI/CD

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Debug  # Use Debug for better test diagnostics

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          cmake \
          ninja-build \
          curl \
          zip \
          unzip \
          tar \
          pkg-config \
          libx11-dev \
          libxinerama-dev \
          libxcursor-dev \
          libxi-dev \
          libxrandr-dev \
          xorg-dev \
          libglu1-mesa-dev

    - name: Install Vulkan development libraries
      run: |
        # Install Vulkan headers and loader from Ubuntu packages (more reliable for CI)
        sudo apt install -y \
          libvulkan-dev \
          vulkan-tools \
          vulkan-utility-libraries-dev \
          spirv-tools \
          glslang-tools \
          mesa-vulkan-drivers
        
        # Set VULKAN_SDK environment variable for compatibility
        echo "VULKAN_SDK=/usr" >> $GITHUB_ENV
        echo "VK_LAYER_PATH=/usr/share/vulkan/explicit_layer.d" >> $GITHUB_ENV

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Configure and Build
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ci-x64-linux'
        buildPreset: 'ci-x64-linux'

    - name: Run C++ Unit Tests
      working-directory: ${{ github.workspace }}/build/tests_cpp
      run: |
        echo "Running VulkanMon C++ Unit Test Suite..."
        echo "Contents of tests_cpp directory:"
        ls -la
        
        # With Ninja, executable should be directly in the directory
        if [ -f "vulkanmon_tests" ]; then
          ./vulkanmon_tests --reporter=console::out=-::colour-mode=ansi
        else
          echo "Error: vulkanmon_tests executable not found"
          echo "Full build directory structure:"
          find ${{ github.workspace }}/build -name "*test*" -type f
          exit 1
        fi

    - name: Run specific test categories
      working-directory: ${{ github.workspace }}/build/tests_cpp
      run: |
        echo "Testing individual core systems..."
        
        echo "=== Logger Tests ==="
        ./vulkanmon_tests "[Logger]" || true
        
        echo "=== Camera Tests ==="
        ./vulkanmon_tests "[Camera]" || true

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ubuntu-test-results
        path: |
          ${{ github.workspace }}/build/tests_cpp/vulkanmon_tests
          ${{ github.workspace }}/build/vulkanmon
          ${{ github.workspace }}/build/*.log
        retention-days: 7

    - name: Build summary
      if: always()
      run: |
        echo "## VulkanMon CI Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Type**: ${{ env.BUILD_TYPE }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Platform**: Ubuntu Latest" >> $GITHUB_STEP_SUMMARY
        echo "- **Generator**: Ninja" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependencies**: vcpkg managed" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Framework**: Catch2 via vcpkg" >> $GITHUB_STEP_SUMMARY
        echo "- **Expected Tests**: 10 test cases, 59 assertions" >> $GITHUB_STEP_SUMMARY

